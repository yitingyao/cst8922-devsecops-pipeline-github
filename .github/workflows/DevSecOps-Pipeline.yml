name: DevSecOps-Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # (Optional) Docker login
      - name: Docker login
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login \
              --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            echo "Docker login successful."
          else
            echo "No Docker credentials provided; pulling anonymously."
          fi

      # Step 1: Build Docker image
      - name: Build Docker image
        run: docker build -t minimal-devsecops-example .

      # Step 2: Scan Docker image with Trivy
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'minimal-devsecops-example'
          exit-code: '0'

      # Step 3: Run container
      - name: Run container
        run: docker run -d -p 8080:8080 --name minimalapp minimal-devsecops-example

      # Step 4: ZAP Baseline Scan manually
      - name: ZAP Baseline Scan
        run: |
          docker run --network=host \
            -u root \
            -v "$(pwd)":/zap/wrk \
            zaproxy/zap-weekly \
            zap-baseline.py \
              --autooff \
              -I \
              -t http://127.0.0.1:8080 \
              -J /zap/wrk/report_json.json \
              -w /zap/wrk/report_md.md \
              -r /zap/wrk/report_html.html

      # Step 5: Stop container
      - name: Stop container
        run: docker stop minimalapp

      # Step 6: Upload the ZAP reports with an older stable release
      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v2.2.4
        with:
          name: zap-scan-reports
          path: |
            report_html.html
            report_md.md
            report_json.json
