name: DevSecOps-Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # (Optional) Step 0: Docker login to avoid pull rate-limit errors
      # This step only runs if DOCKER_USERNAME and DOCKER_PASSWORD secrets exist
      - name: Docker login
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login \
            --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Step 1: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t minimal-devsecops-example .

      # Step 2: Container Image Scan with Trivy
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'minimal-devsecops-example'
          exit-code: '0'  # Change to '1' if you want to fail on discovered vulnerabilities

      # Step 3: Run the container in the background
      - name: Run container
        run: |
          docker run -d -p 8080:8080 --name minimalapp minimal-devsecops-example

      # Step 4: OWASP ZAP Baseline Scan
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://127.0.0.1:8080'
          # Must be 'true' or 'false' with v0.7.0:
          fail_action: 'false'
          # Docker Hub image name for ZAP:
          docker_name: 'owasp/zap2docker-stable'
          # Allows action to create Issues, etc. (optional but recommended)
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Stop the container
      - name: Stop container
        run: docker stop minimalapp
